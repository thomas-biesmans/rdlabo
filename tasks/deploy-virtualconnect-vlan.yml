---

# - debug:
#     msg: "biep"
#   when: network_list_parsed.parsed[0][0] | selectattr('network_vlan_id', 'defined') | selectattr('network_vlan_id', 'eq', vlan.vlan_id | string) | selectattr('network_sus', 'eq', shared_uplink_set) | list | length == 0
#   loop: "{{ virtual_connect_shared_uplinks_sets }}"
#   loop_control:
#     loop_var: shared_uplink_set
#     index_var: shared_uplink_set_index
  
- name: "Creating network '{{ vlan.name }}' if VLAN not found on SUS and parsing through ttp"
  ansible.utils.cli_parse:
    command: "add network {{ vlan.name | replace(' ','_') }}{{ (virtual_connect_shared_uplinks_sets | length == 2 and shared_uplink_set_index == 0) | ternary('-A', '') }}{{ (virtual_connect_shared_uplinks_sets | length == 2 and shared_uplink_set_index == 1) | ternary('-B', '') }} UplinkSet={{ shared_uplink_set }} VLanID={{ vlan.vlan_id }}"
    parser:
      command: virtual connect add network
      name: ansible.utils.ttp
  register: network_creation_parsed
  when: network_list_parsed.parsed[0][0] | selectattr('network_vlan_id', 'defined') | selectattr('network_vlan_id', 'eq', vlan.vlan_id | string) | selectattr('network_sus', 'eq', shared_uplink_set) | list | length == 0
  loop: "{{ virtual_connect_shared_uplinks_sets }}"
  loop_control:
    loop_var: shared_uplink_set
    index_var: shared_uplink_set_index
  failed_when: not 'SUCCESS' in network_creation_parsed.stdout


- name: "Renaming network '{{ vlan.name }}' if found and parsing through ttp"
  vars:
    current_network_name: "{{ network_list_parsed.parsed[0][0] | selectattr('network_vlan_id', 'defined') | selectattr('network_vlan_id', 'eq', vlan.vlan_id | string) | selectattr('network_sus', 'eq', shared_uplink_set) | map(attribute='network_name') | list | first }}"
    new_network_name: "{{ vlan.name | replace(' ','_') }}{{ (virtual_connect_shared_uplinks_sets | length == 2 and shared_uplink_set_index == 0) | ternary('-A', '') }}{{ (virtual_connect_shared_uplinks_sets | length == 2 and shared_uplink_set_index == 1) | ternary('-B', '') }}"
  ansible.utils.cli_parse:
    command: "set network {{ current_network_name }} name={{ new_network_name }}"
    parser:
      command: virtual connect add network
      name: ansible.utils.ttp
  register: network_creation_parsed
  when: network_list_parsed.parsed[0][0] | selectattr('network_vlan_id', 'defined') | selectattr('network_vlan_id', 'eq', vlan.vlan_id | string) | selectattr('network_sus', 'eq', shared_uplink_set) | list | length != 0 and current_network_name != new_network_name
  loop: "{{ virtual_connect_shared_uplinks_sets }}"
  loop_control:
    loop_var: shared_uplink_set
    index_var: shared_uplink_set_index
  failed_when: not 'SUCCESS' in network_creation_parsed.stdout

# - name: "Set VLAN name to '{{ vlan.name }}'"
#   when: vlans_list_parsed.parsed[0][0].vlan.vlan_name != vlan.name
#   changed_when: vlans_list_parsed.parsed[0][0].vlan.vlan_name != vlan.name


# - debug:
#     msg: "{{ network_creation_parsed }}"
# - pause:
# - debug:
#     msg: "{{ network_creation_parsed.parsed[0][0] }}"
# - fail:
# - debug:
#     msg: "{{ network_list_parsed.parsed[0][0] | map(attribute='network_name') | list }}"