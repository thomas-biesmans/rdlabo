---
- name: "Create DNS records for ingress URL '{{ url }}'"
  when: vars.type == 'bootstrap'
  block:

  - name: "Fail if no single reverse lookup zone is found for ingress URL '{{ url }}'"
    fail:
      msg: "No single forward lookup zone found for {{ vars.openshift_ingress_vlan }}, there are 
            {{ vars.vlans | selectattr('name','eq', vars.openshift_ingress_vlan) | map(attribute='revlookupzonename') | list | length }}"
    when: vars.vlans | selectattr('name','eq', vars.openshift_ingress_vlan) | map(attribute='revlookupzonename') | list | length != 1

  - name: "Find matching reverse lookup zone for ingress URL '{{ url }}'"
    set_fact:
      found_revlookupzonename: "{{ (vars.vlans | selectattr('name','eq', vars.openshift_ingress_vlan) | map(attribute='revlookupzonename') | list)[0] }}"
      found_fwdlookupzonename: "{{ url.split('.')[-2:] | join('.') }}"
  
  - name: "Ensure primary zone is present for ingress URL '{{ url }}'"
    community.windows.win_dns_zone:
      name: "{{ found_fwdlookupzonename }}"
      replication: domain
      type: primary
      state: present
    delegate_to: "{{ item }}"
    with_items: "{{ groups.windows_dns }}"
    
  - name: "Create Windows DNS A record for ingress URL '{{ url }}'"
    community.windows.win_dns_record:
      name: "{{ url.split('.')[:-2] | join('.') }}"
      type: A
      value: "{{ vars.openshift_ingress_ip }}"
      zone: "{{ vars.found_fwdlookupzonename }}"
    delegate_to: "{{ item }}"
    with_items: "{{ groups.windows_dns }}"
